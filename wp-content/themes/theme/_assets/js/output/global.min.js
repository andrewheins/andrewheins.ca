var Site = Site || {};

Site.Views = {}, Site.Collections = {}, Site.Models = {}, Site.utilities = {
    capitalizeFirstLetter: function(a) {
        return a.charAt(0).toUpperCase() + a.slice(1);
    },
    underscoreToCamelCase: function(a) {
        return a.replace(/_([a-z])/g, function(a) {
            return a[1].toUpperCase();
        });
    },
    underscoreToMethodName: function(a) {
        return Site.utilities.capitalizeFirstLetter(Site.utilities.underscoreToCamelCase(a));
    },
    isIE8: function() {
        return $("html").hasClass("ie8");
    },
    isIE9: function() {
        return $("html").hasClass("ie9");
    },
    probablyMobile: function() {
        return $(window).width() <= 640 && Modernizr.touch;
    },
    lockScrolling: function() {
        $("body").css("overflow", "hidden").on("touchmove.lockedscrolling", function(a) {
            a.preventDefault();
        });
    },
    unlockScrolling: function() {
        $("body").css("overflow", "auto").off(".lockedscrolling");
    },
    forceRepaint: function() {
        $("body").addClass("force-repaint").removeClass("force-repaint");
    },
    forceTwoDigits: function(a) {
        return a > 9 ? "" + a : "0" + a;
    },
    utcDateString: function(a) {
        return Site.utilities.forceTwoDigits(a.getUTCDate()) + "/" + Site.utilities.forceTwoDigits(a.getUTCMonth() + 1) + "/" + a.getUTCFullYear();
    }
}, Site.Models.ViewState = Backbone.Model.extend(), Backbone.View.prototype._super = function(a) {
    return this.constructor.__super__[a].apply(this, _.rest(arguments));
}, $(function() {});
//# sourceMappingURL=global.min.js.map